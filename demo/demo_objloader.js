(()=>{"use strict";var __webpack_modules__={146:(__unused_webpack___webpack_module__,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/@masatomakino/particle-waypoint/esm/index.js + 14 modules\nvar esm = __webpack_require__(754);\n// EXTERNAL MODULE: ./node_modules/three/build/three.module.js\nvar three_module = __webpack_require__(75);\n;// CONCATENATED MODULE: ./esm/ThreeParticle.js\n\n\nclass ThreeParticle extends esm/* Particle */.hp {\n  init(parent, texturePath, scale) {\n    if (ThreeParticle.loader == null) {\n      ThreeParticle.loader = new three_module/* TextureLoader */.dpR();\n    }\n    this.parent = parent;\n    return new Promise((resolve, reject) => {\n      const map = ThreeParticle.loader.load(texturePath, texture => {\n        this.sprite?.scale.set(texture.image.width * scale, texture.image.height * scale, 1.0);\n        return resolve(this.sprite);\n      }, undefined, err => {\n        return reject(err);\n      });\n      const mat = new three_module/* SpriteMaterial */.xeV({\n        map: map,\n        depthTest: false\n      });\n      this.sprite = new three_module/* Sprite */.jyi(mat);\n      this.parent.add(this.sprite);\n    });\n  }\n  update(t) {\n    const n = super.update(t);\n    const pos = this.path.getPoint(n);\n    this.sprite.position.set(pos[0], pos[1], pos[2]);\n    return n;\n  }\n  dispose() {\n    super.dispose();\n    if (this.parent && this.sprite.parent) {\n      this.sprite.parent.remove(this.sprite);\n    }\n    this.parent = null;\n    this.sprite = null;\n  }\n}\n;// CONCATENATED MODULE: ./esm/ThreeParticleGenerator.js\n\n\nclass ThreeParticleGenerator extends esm/* ParticleGenerator */.F8 {\n  constructor(parent, path, texturePath, scale, option) {\n    super(path, option);\n    this.textureCounter = 0;\n    this.parent = parent;\n    this.scale = scale;\n    if (Array.isArray(texturePath)) {\n      this.texturePath = texturePath;\n    } else {\n      this.texturePath = [texturePath];\n    }\n  }\n  generateParticle(path) {\n    const particle = new ThreeParticle(path);\n    particle.init(this.parent, this.texturePath[this.textureCounter], this.scale);\n    this.textureCounter = (this.textureCounter += 1) % this.texturePath.length;\n    return particle;\n  }\n  generateAll() {\n    this.textureCounter = 0;\n    super.generateAll();\n  }\n}\n;// CONCATENATED MODULE: ./esm/index.js\n\n\n;// CONCATENATED MODULE: ./demoSrc/common.js\n\nconst initScene = (W, H) => {\n  // シーンを作成\n  const scene = new three_module/* Scene */.xsS();\n  const camera = new three_module/* PerspectiveCamera */.cPb(45, W / H, 1, 400);\n  camera.position.set(0, 0, 50);\n  scene.add(camera);\n  const renderOption = {\n    canvas: document.getElementById("webgl-canvas"),\n    antialias: true\n  };\n  const renderer = new three_module/* WebGLRenderer */.CP7(renderOption);\n  renderer.setClearColor(new three_module/* Color */.Ilk(0x000000));\n  renderer.setSize(W, H);\n  renderer.setPixelRatio(window.devicePixelRatio);\n  console.log(`Three.js revision ${three_module/* REVISION */.UZH}`);\n\n  //平行光源オブジェクト(light)の設定\n  const ambientLight = new three_module/* AmbientLight */.Mig(0xffffff, 1.0);\n  scene.add(ambientLight);\n  return {\n    scene,\n    camera,\n    renderer\n  };\n};\nconst startRendering = (scene, camera, renderer) => {\n  const render = () => {\n    renderer.render(scene, camera);\n    requestAnimationFrame(render);\n  };\n  render();\n};\n// EXTERNAL MODULE: ./node_modules/three/examples/jsm/loaders/OBJLoader.js\nvar OBJLoader = __webpack_require__(815);\n;// CONCATENATED MODULE: ./demoSrc/demo_objloader.js\n\n\n\n\n\n/**\n * OBJLoaderを使ってパスを読み込むサンプル\n *\n * OBJファイルでは、閉じていない線分も読み込める。\n * 3Dモデルの形式によっては、閉じていない線分は保存の時点で削除されている場合がある。\n */\n\nconst W = 800;\nconst H = 600;\nconst onDomContentsLoaded = async () => {\n  const {\n    scene,\n    camera,\n    renderer\n  } = initScene(W, H);\n  await initWaypoint(scene);\n  startRendering(scene, camera, renderer);\n};\nconst initWaypoint = async scene => {\n  const loader = new OBJLoader/* OBJLoader */.L();\n  const obj = await loader.loadAsync("./path.obj");\n\n  //OBJLoaderで読み込んだパスは、LineSegmentsオブジェクトとして取得される\n  const line = obj.children[0];\n  //LineSegmentsオブジェクトの各頂点は、"position"という名前のBufferAttributeとして取得できる\n  const positions = line.geometry.getAttribute("position");\n\n  //BufferAttributeから各頂点の座標を取得する\n  const points = Array.from({\n    length: positions.count\n  }, (_, i) => {\n    const x = positions.getX(i);\n    const y = positions.getY(i);\n    const z = positions.getZ(i);\n    return [x, y, z];\n  });\n  const path = new esm/* ParticleWay */.mG(points);\n  const generator = new ThreeParticleGenerator(scene, path, ["./map01.png", "./map02.png", "./map03.png", "./map04.png"], 0.005, {\n    generationMode: "loop"\n  });\n  generator.animator.setGenerationInterval(0.08, 4 * 8);\n  generator.play();\n};\nwindow.onload = onDomContentsLoaded;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RSxhQUFhLENBQUMsRUFDNUQsS0FBSyxFQUNMO0lBQ0VtRSxjQUFjLEVBQUU7RUFDbEIsQ0FDRixDQUFDO0VBQ0RELFNBQVMsQ0FBQ0UsUUFBUSxDQUFDQyxxQkFBcUIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQztFQUNyREgsU0FBUyxDQUFDSSxJQUFJLENBQUMsQ0FBQztBQUNsQixDQUFDO0FBRURsQyxNQUFNLENBQUNtQyxNQUFNLEdBQUd6QixtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3RocmVlanMtcGFydGljbGUtd2F5cG9pbnQvLi9lc20vVGhyZWVQYXJ0aWNsZS5qcz80YzI0Iiwid2VicGFjazovL0BtYXNhdG9tYWtpbm8vdGhyZWVqcy1wYXJ0aWNsZS13YXlwb2ludC8uL2VzbS9UaHJlZVBhcnRpY2xlR2VuZXJhdG9yLmpzPzcwNTgiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby90aHJlZWpzLXBhcnRpY2xlLXdheXBvaW50Ly4vZXNtL2luZGV4LmpzP2IyMzkiLCJ3ZWJwYWNrOi8vQG1hc2F0b21ha2luby90aHJlZWpzLXBhcnRpY2xlLXdheXBvaW50Ly4vZGVtb1NyYy9jb21tb24uanM/NDA2ZiIsIndlYnBhY2s6Ly9AbWFzYXRvbWFraW5vL3RocmVlanMtcGFydGljbGUtd2F5cG9pbnQvLi9kZW1vU3JjL2RlbW9fb2JqbG9hZGVyLmpzPzRhMTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3ByaXRlLCBTcHJpdGVNYXRlcmlhbCwgVGV4dHVyZUxvYWRlciwgfSBmcm9tIFwidGhyZWVcIjtcbmltcG9ydCB7IFBhcnRpY2xlIH0gZnJvbSBcIkBtYXNhdG9tYWtpbm8vcGFydGljbGUtd2F5cG9pbnRcIjtcbmV4cG9ydCBjbGFzcyBUaHJlZVBhcnRpY2xlIGV4dGVuZHMgUGFydGljbGUge1xuICAgIGluaXQocGFyZW50LCB0ZXh0dXJlUGF0aCwgc2NhbGUpIHtcbiAgICAgICAgaWYgKFRocmVlUGFydGljbGUubG9hZGVyID09IG51bGwpIHtcbiAgICAgICAgICAgIFRocmVlUGFydGljbGUubG9hZGVyID0gbmV3IFRleHR1cmVMb2FkZXIoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG1hcCA9IFRocmVlUGFydGljbGUubG9hZGVyLmxvYWQodGV4dHVyZVBhdGgsICh0ZXh0dXJlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5zcHJpdGU/LnNjYWxlLnNldCh0ZXh0dXJlLmltYWdlLndpZHRoICogc2NhbGUsIHRleHR1cmUuaW1hZ2UuaGVpZ2h0ICogc2NhbGUsIDEuMCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUodGhpcy5zcHJpdGUpO1xuICAgICAgICAgICAgfSwgdW5kZWZpbmVkLCAoZXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlamVjdChlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBtYXQgPSBuZXcgU3ByaXRlTWF0ZXJpYWwoe1xuICAgICAgICAgICAgICAgIG1hcDogbWFwLFxuICAgICAgICAgICAgICAgIGRlcHRoVGVzdDogZmFsc2UsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuc3ByaXRlID0gbmV3IFNwcml0ZShtYXQpO1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQuYWRkKHRoaXMuc3ByaXRlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHVwZGF0ZSh0KSB7XG4gICAgICAgIGNvbnN0IG4gPSBzdXBlci51cGRhdGUodCk7XG4gICAgICAgIGNvbnN0IHBvcyA9IHRoaXMucGF0aC5nZXRQb2ludChuKTtcbiAgICAgICAgdGhpcy5zcHJpdGUucG9zaXRpb24uc2V0KHBvc1swXSwgcG9zWzFdLCBwb3NbMl0pO1xuICAgICAgICByZXR1cm4gbjtcbiAgICB9XG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgc3VwZXIuZGlzcG9zZSgpO1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgJiYgdGhpcy5zcHJpdGUucGFyZW50KSB7XG4gICAgICAgICAgICB0aGlzLnNwcml0ZS5wYXJlbnQucmVtb3ZlKHRoaXMuc3ByaXRlKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmVudCA9IG51bGw7XG4gICAgICAgIHRoaXMuc3ByaXRlID0gbnVsbDtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBUaHJlZVBhcnRpY2xlIH0gZnJvbSBcIi4vaW5kZXguanNcIjtcbmltcG9ydCB7IFBhcnRpY2xlR2VuZXJhdG9yLCB9IGZyb20gXCJAbWFzYXRvbWFraW5vL3BhcnRpY2xlLXdheXBvaW50XCI7XG5leHBvcnQgY2xhc3MgVGhyZWVQYXJ0aWNsZUdlbmVyYXRvciBleHRlbmRzIFBhcnRpY2xlR2VuZXJhdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQsIHBhdGgsIHRleHR1cmVQYXRoLCBzY2FsZSwgb3B0aW9uKSB7XG4gICAgICAgIHN1cGVyKHBhdGgsIG9wdGlvbik7XG4gICAgICAgIHRoaXMudGV4dHVyZUNvdW50ZXIgPSAwO1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudDtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0ZXh0dXJlUGF0aCkpIHtcbiAgICAgICAgICAgIHRoaXMudGV4dHVyZVBhdGggPSB0ZXh0dXJlUGF0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudGV4dHVyZVBhdGggPSBbdGV4dHVyZVBhdGhdO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdlbmVyYXRlUGFydGljbGUocGF0aCkge1xuICAgICAgICBjb25zdCBwYXJ0aWNsZSA9IG5ldyBUaHJlZVBhcnRpY2xlKHBhdGgpO1xuICAgICAgICBwYXJ0aWNsZS5pbml0KHRoaXMucGFyZW50LCB0aGlzLnRleHR1cmVQYXRoW3RoaXMudGV4dHVyZUNvdW50ZXJdLCB0aGlzLnNjYWxlKTtcbiAgICAgICAgdGhpcy50ZXh0dXJlQ291bnRlciA9ICh0aGlzLnRleHR1cmVDb3VudGVyICs9IDEpICUgdGhpcy50ZXh0dXJlUGF0aC5sZW5ndGg7XG4gICAgICAgIHJldHVybiBwYXJ0aWNsZTtcbiAgICB9XG4gICAgZ2VuZXJhdGVBbGwoKSB7XG4gICAgICAgIHRoaXMudGV4dHVyZUNvdW50ZXIgPSAwO1xuICAgICAgICBzdXBlci5nZW5lcmF0ZUFsbCgpO1xuICAgIH1cbn1cbiIsImV4cG9ydCAqIGZyb20gXCIuL1RocmVlUGFydGljbGUuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1RocmVlUGFydGljbGVHZW5lcmF0b3IuanNcIjtcbiIsImltcG9ydCB7XG4gIEFtYmllbnRMaWdodCxcbiAgQ29sb3IsXG4gIFBlcnNwZWN0aXZlQ2FtZXJhLFxuICBTY2VuZSxcbiAgV2ViR0xSZW5kZXJlcixcbiAgUkVWSVNJT04sXG59IGZyb20gXCJ0aHJlZVwiO1xuXG5leHBvcnQgY29uc3QgaW5pdFNjZW5lID0gKFcsIEgpID0+IHtcbiAgLy8g44K344O844Oz44KS5L2c5oiQXG4gIGNvbnN0IHNjZW5lID0gbmV3IFNjZW5lKCk7XG4gIGNvbnN0IGNhbWVyYSA9IG5ldyBQZXJzcGVjdGl2ZUNhbWVyYSg0NSwgVyAvIEgsIDEsIDQwMCk7XG4gIGNhbWVyYS5wb3NpdGlvbi5zZXQoMCwgMCwgNTApO1xuICBzY2VuZS5hZGQoY2FtZXJhKTtcblxuICBjb25zdCByZW5kZXJPcHRpb24gPSB7XG4gICAgY2FudmFzOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndlYmdsLWNhbnZhc1wiKSxcbiAgICBhbnRpYWxpYXM6IHRydWUsXG4gIH07XG4gIGNvbnN0IHJlbmRlcmVyID0gbmV3IFdlYkdMUmVuZGVyZXIocmVuZGVyT3B0aW9uKTtcbiAgcmVuZGVyZXIuc2V0Q2xlYXJDb2xvcihuZXcgQ29sb3IoMHgwMDAwMDApKTtcbiAgcmVuZGVyZXIuc2V0U2l6ZShXLCBIKTtcbiAgcmVuZGVyZXIuc2V0UGl4ZWxSYXRpbyh3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpbyk7XG5cbiAgY29uc29sZS5sb2coYFRocmVlLmpzIHJldmlzaW9uICR7UkVWSVNJT059YCk7XG5cbiAgLy/lubPooYzlhYnmupDjgqrjg5bjgrjjgqfjgq/jg4gobGlnaHQp44Gu6Kit5a6aXG4gIGNvbnN0IGFtYmllbnRMaWdodCA9IG5ldyBBbWJpZW50TGlnaHQoMHhmZmZmZmYsIDEuMCk7XG4gIHNjZW5lLmFkZChhbWJpZW50TGlnaHQpO1xuICByZXR1cm4geyBzY2VuZSwgY2FtZXJhLCByZW5kZXJlciB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHN0YXJ0UmVuZGVyaW5nID0gKHNjZW5lLCBjYW1lcmEsIHJlbmRlcmVyKSA9PiB7XG4gIGNvbnN0IHJlbmRlciA9ICgpID0+IHtcbiAgICByZW5kZXJlci5yZW5kZXIoc2NlbmUsIGNhbWVyYSk7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHJlbmRlcik7XG4gIH07XG4gIHJlbmRlcigpO1xufTtcbiIsImltcG9ydCB7IFBhcnRpY2xlV2F5IH0gZnJvbSBcIkBtYXNhdG9tYWtpbm8vcGFydGljbGUtd2F5cG9pbnRcIjtcbmltcG9ydCB7IFRocmVlUGFydGljbGVHZW5lcmF0b3IgfSBmcm9tIFwiLi4vZXNtL2luZGV4LmpzXCI7XG5pbXBvcnQgeyBpbml0U2NlbmUsIHN0YXJ0UmVuZGVyaW5nIH0gZnJvbSBcIi4vY29tbW9uLmpzXCI7XG5pbXBvcnQgeyBPQkpMb2FkZXIgfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL2xvYWRlcnMvT0JKTG9hZGVyLmpzXCI7XG5cbi8qKlxuICogT0JKTG9hZGVy44KS5L2/44Gj44Gm44OR44K544KS6Kqt44G/6L6844KA44K144Oz44OX44OrXG4gKlxuICogT0JK44OV44Kh44Kk44Or44Gn44Gv44CB6ZaJ44GY44Gm44GE44Gq44GE57ea5YiG44KC6Kqt44G/6L6844KB44KL44CCXG4gKiAzROODouODh+ODq+OBruW9ouW8j+OBq+OCiOOBo+OBpuOBr+OAgemWieOBmOOBpuOBhOOBquOBhOe3muWIhuOBr+S/neWtmOOBruaZgueCueOBp+WJiumZpOOBleOCjOOBpuOBhOOCi+WgtOWQiOOBjOOBguOCi+OAglxuICovXG5cbmNvbnN0IFcgPSA4MDA7XG5jb25zdCBIID0gNjAwO1xuXG5jb25zdCBvbkRvbUNvbnRlbnRzTG9hZGVkID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCB7IHNjZW5lLCBjYW1lcmEsIHJlbmRlcmVyIH0gPSBpbml0U2NlbmUoVywgSCk7XG4gIGF3YWl0IGluaXRXYXlwb2ludChzY2VuZSk7XG4gIHN0YXJ0UmVuZGVyaW5nKHNjZW5lLCBjYW1lcmEsIHJlbmRlcmVyKTtcbn07XG5cbmNvbnN0IGluaXRXYXlwb2ludCA9IGFzeW5jIChzY2VuZSkgPT4ge1xuICBjb25zdCBsb2FkZXIgPSBuZXcgT0JKTG9hZGVyKCk7XG4gIGNvbnN0IG9iaiA9IGF3YWl0IGxvYWRlci5sb2FkQXN5bmMoXCIuL3BhdGgub2JqXCIpO1xuXG4gIC8vT0JKTG9hZGVy44Gn6Kqt44G/6L6844KT44Gg44OR44K544Gv44CBTGluZVNlZ21lbnRz44Kq44OW44K444Kn44Kv44OI44Go44GX44Gm5Y+W5b6X44GV44KM44KLXG4gIGNvbnN0IGxpbmUgPSBvYmouY2hpbGRyZW5bMF07XG4gIC8vTGluZVNlZ21lbnRz44Kq44OW44K444Kn44Kv44OI44Gu5ZCE6aCC54K544Gv44CBXCJwb3NpdGlvblwi44Go44GE44GG5ZCN5YmN44GuQnVmZmVyQXR0cmlidXRl44Go44GX44Gm5Y+W5b6X44Gn44GN44KLXG4gIGNvbnN0IHBvc2l0aW9ucyA9IGxpbmUuZ2VvbWV0cnkuZ2V0QXR0cmlidXRlKFwicG9zaXRpb25cIik7XG5cbiAgLy9CdWZmZXJBdHRyaWJ1dGXjgYvjgonlkITpoILngrnjga7luqfmqJnjgpLlj5blvpfjgZnjgotcbiAgY29uc3QgcG9pbnRzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogcG9zaXRpb25zLmNvdW50IH0sIChfLCBpKSA9PiB7XG4gICAgY29uc3QgeCA9IHBvc2l0aW9ucy5nZXRYKGkpO1xuICAgIGNvbnN0IHkgPSBwb3NpdGlvbnMuZ2V0WShpKTtcbiAgICBjb25zdCB6ID0gcG9zaXRpb25zLmdldFooaSk7XG4gICAgcmV0dXJuIFt4LCB5LCB6XTtcbiAgfSk7XG5cbiAgY29uc3QgcGF0aCA9IG5ldyBQYXJ0aWNsZVdheShwb2ludHMpO1xuICBjb25zdCBnZW5lcmF0b3IgPSBuZXcgVGhyZWVQYXJ0aWNsZUdlbmVyYXRvcihcbiAgICBzY2VuZSxcbiAgICBwYXRoLFxuICAgIFtcIi4vbWFwMDEucG5nXCIsIFwiLi9tYXAwMi5wbmdcIiwgXCIuL21hcDAzLnBuZ1wiLCBcIi4vbWFwMDQucG5nXCJdLFxuICAgIDAuMDA1LFxuICAgIHtcbiAgICAgIGdlbmVyYXRpb25Nb2RlOiBcImxvb3BcIixcbiAgICB9LFxuICApO1xuICBnZW5lcmF0b3IuYW5pbWF0b3Iuc2V0R2VuZXJhdGlvbkludGVydmFsKDAuMDgsIDQgKiA4KTtcbiAgZ2VuZXJhdG9yLnBsYXkoKTtcbn07XG5cbndpbmRvdy5vbmxvYWQgPSBvbkRvbUNvbnRlbnRzTG9hZGVkO1xuIl0sIm5hbWVzIjpbIlNwcml0ZSIsIlNwcml0ZU1hdGVyaWFsIiwiVGV4dHVyZUxvYWRlciIsIlBhcnRpY2xlIiwiVGhyZWVQYXJ0aWNsZSIsImluaXQiLCJwYXJlbnQiLCJ0ZXh0dXJlUGF0aCIsInNjYWxlIiwibG9hZGVyIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJtYXAiLCJsb2FkIiwidGV4dHVyZSIsInNwcml0ZSIsInNldCIsImltYWdlIiwid2lkdGgiLCJoZWlnaHQiLCJ1bmRlZmluZWQiLCJlcnIiLCJtYXQiLCJkZXB0aFRlc3QiLCJhZGQiLCJ1cGRhdGUiLCJ0IiwibiIsInBvcyIsInBhdGgiLCJnZXRQb2ludCIsInBvc2l0aW9uIiwiZGlzcG9zZSIsInJlbW92ZSIsIlBhcnRpY2xlR2VuZXJhdG9yIiwiVGhyZWVQYXJ0aWNsZUdlbmVyYXRvciIsImNvbnN0cnVjdG9yIiwib3B0aW9uIiwidGV4dHVyZUNvdW50ZXIiLCJBcnJheSIsImlzQXJyYXkiLCJnZW5lcmF0ZVBhcnRpY2xlIiwicGFydGljbGUiLCJsZW5ndGgiLCJnZW5lcmF0ZUFsbCIsIkFtYmllbnRMaWdodCIsIkNvbG9yIiwiUGVyc3BlY3RpdmVDYW1lcmEiLCJTY2VuZSIsIldlYkdMUmVuZGVyZXIiLCJSRVZJU0lPTiIsImluaXRTY2VuZSIsIlciLCJIIiwic2NlbmUiLCJjYW1lcmEiLCJyZW5kZXJPcHRpb24iLCJjYW52YXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYW50aWFsaWFzIiwicmVuZGVyZXIiLCJzZXRDbGVhckNvbG9yIiwic2V0U2l6ZSIsInNldFBpeGVsUmF0aW8iLCJ3aW5kb3ciLCJkZXZpY2VQaXhlbFJhdGlvIiwiY29uc29sZSIsImxvZyIsImFtYmllbnRMaWdodCIsInN0YXJ0UmVuZGVyaW5nIiwicmVuZGVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiUGFydGljbGVXYXkiLCJPQkpMb2FkZXIiLCJvbkRvbUNvbnRlbnRzTG9hZGVkIiwiaW5pdFdheXBvaW50Iiwib2JqIiwibG9hZEFzeW5jIiwibGluZSIsImNoaWxkcmVuIiwicG9zaXRpb25zIiwiZ2VvbWV0cnkiLCJnZXRBdHRyaWJ1dGUiLCJwb2ludHMiLCJmcm9tIiwiY291bnQiLCJfIiwiaSIsIngiLCJnZXRYIiwieSIsImdldFkiLCJ6IiwiZ2V0WiIsImdlbmVyYXRvciIsImdlbmVyYXRpb25Nb2RlIiwiYW5pbWF0b3IiLCJzZXRHZW5lcmF0aW9uSW50ZXJ2YWwiLCJwbGF5Iiwib25sb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///146\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var U=__webpack_module_cache__[Q];if(void 0!==U)return U.exports;var F=__webpack_module_cache__[Q]={exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,U,F,B)=>{if(!U){var e=1/0;for(c=0;c<deferred.length;c++){for(var[U,F,B]=deferred[c],s=!0,n=0;n<U.length;n++)(!1&B||e>=B)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](U[n])))?U.splice(n--,1):(s=!1,B<e&&(e=B));if(s){deferred.splice(c--,1);var I=F();void 0!==I&&(Q=I)}}return Q}B=B||0;for(var c=deferred.length;c>0&&deferred[c-1][2]>B;c--)deferred[c]=deferred[c-1];deferred[c]=[U,F,B]},__webpack_require__.d=(Q,U)=>{for(var F in U)__webpack_require__.o(U,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:U[F]})},__webpack_require__.o=(Q,U)=>Object.prototype.hasOwnProperty.call(Q,U),__webpack_require__.j=594,(()=>{var Q={594:0};__webpack_require__.O.j=U=>0===Q[U];var U=(U,F)=>{var B,e,[s,n,I]=F,c=0;if(s.some((U=>0!==Q[U]))){for(B in n)__webpack_require__.o(n,B)&&(__webpack_require__.m[B]=n[B]);if(I)var i=I(__webpack_require__)}for(U&&U(F);c<s.length;c++)e=s[c],__webpack_require__.o(Q,e)&&Q[e]&&Q[e][0](),Q[e]=0;return __webpack_require__.O(i)},F=self.webpackChunk_masatomakino_threejs_particle_waypoint=self.webpackChunk_masatomakino_threejs_particle_waypoint||[];F.forEach(U.bind(null,0)),F.push=U.bind(null,F.push.bind(F))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(146)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();